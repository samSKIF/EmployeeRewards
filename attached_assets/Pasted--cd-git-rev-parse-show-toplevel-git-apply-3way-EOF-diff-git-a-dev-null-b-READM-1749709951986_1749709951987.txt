 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a//dev/null b/README.md
index 0000000000000000000000000000000000000000..cf4ea2811e2f46708b14ede41960fca67ffd4983 100644
--- a//dev/null
+++ b/README.md
@@ -0,0 +1,56 @@
+# Employee Rewards Platform
+
+This project powers an employee engagement system focused on recognition and rewards. It provides a social feed, peer‑to‑peer recognition tools and a points based reward economy. The codebase includes an Express API with optional microservices and a React client served through Vite.
+
+## Setup
+
+1. **Install dependencies**
+   ```bash
+   npm install
+   ```
+2. **Create a `.env` file** and provide the required environment variables (see below).
+3. **Provision databases** (optional) to verify connections:
+   ```bash
+   npm run provision-db
+   ```
+4. **Run migrations** if you are using the hybrid database system:
+   ```bash
+   npm run migrate-hybrid
+   ```
+
+## Environment Variables
+
+The application relies on multiple services. Configure the values below according to your environment:
+
+| Variable | Description |
+| -------- | ----------- |
+| `DATABASE_URL` | PostgreSQL connection string (legacy database) |
+| `MYSQL_DATABASE_URL` | MySQL connection string when using the hybrid system |
+| `MONGODB_URL` or `MONGODB_URI` | MongoDB connection string for social features |
+| `MONGODB_DB_NAME` | MongoDB database name (default `employee_engagement_social`) |
+| `REDIS_URL` | Redis connection URL (optional caching layer) |
+| `ELASTICSEARCH_URL` | Elasticsearch connection string for audit logs |
+| `ELASTICSEARCH_USERNAME` | Elasticsearch username (optional) |
+| `ELASTICSEARCH_PASSWORD` | Elasticsearch password (optional) |
+| `JWT_SECRET` | Secret used for JWT authentication |
+| `MANAGEMENT_DATABASE_URL` | Connection string for the management database |
+| `MANAGEMENT_JWT_SECRET` | Secret for management API authentication |
+| `OPENAI_API_KEY` | API key for generating AI avatars |
+| `MODE` | Supplier integration mode (`DRY_RUN` or `LIVE`) |
+
+## Running the Application
+
+- **Development**
+  ```bash
+  npm run dev
+  ```
+  This starts the Express server (and serves the client) on port 5000.
+
+- **Production**
+  ```bash
+  npm run build
+  npm run start
+  ```
+  The build command bundles the client and server. The start script runs the compiled server with `NODE_ENV=production`.
+
+Additional workflows are defined in `.replit` if you are running the project on Replit.
 
EOF
)