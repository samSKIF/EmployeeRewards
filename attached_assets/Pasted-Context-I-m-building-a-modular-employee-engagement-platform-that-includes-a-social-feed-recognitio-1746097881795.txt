Context:
I’m building a modular employee engagement platform that includes a social feed, recognition features, and a rewards marketplace.
I need to create a complete Onboarding Module, following a microservices-compatible structure.

👤 Feature: Admin (HR) Onboarding Plan Creator
Create an Admin-facing UI to define onboarding plans. Each plan includes:

A title (e.g. “Welcome to ACME Inc.”)

A list of missions (e.g. Complete profile, Send recognition, Redeem reward, Follow colleague)

Each mission has:

Name

Description

Target action type (e.g., POST_RECOGNITION, UPDATE_PROFILE, REDEEM_REWARD)

Points to reward upon completion

A setting to assign the plan to specific users or all new joiners

Store onboarding plans in a database (PostgreSQL or Firebase).

Create a backend endpoint to:

Assign a plan to a user

Fetch current plan + mission status per user

Track and update completion based on user activity logs

🧑‍💼 Feature: Employee-Facing Experience
On the social feed layout, render a top banner notification like:

“🎯 You have 3 onboarding tasks left. Click here to view.”

Clicking the banner opens a checklist modal or side panel showing:

All assigned onboarding missions

Progress (e.g. 2/4 completed)

Completed tasks marked visually (checkmark or progress bar)

As the user performs qualifying actions (e.g. completes profile, sends recognition), the system:

Marks the mission as completed

Triggers a points reward if configured

Updates onboarding status in real time via API

🔧 Backend Architecture (Modular)
Create a dedicated microservice or module called onboarding-service with:

POST /onboarding-plan: Create a new onboarding plan

GET /onboarding-plan/:userId: Get assigned plan with progress

PATCH /onboarding-progress: Update mission status

POST /onboarding-assign: Assign a plan to a user

Integrate with user activity service or event bus to listen for triggers like:

USER_PROFILE_UPDATED

RECOGNITION_SENT

REWARD_REDEEMED

Use events or pub/sub messaging for scalability.

🗃️ Database Models (Simplified)
sql
Copy
Edit
Table: onboarding_plans
- id
- title
- created_by (admin_id)
- is_default (boolean)

Table: onboarding_missions
- id
- plan_id (FK)
- action_type (enum)
- title
- description
- points

Table: onboarding_assignments
- id
- user_id
- plan_id
- status (in_progress, completed)

Table: onboarding_progress
- id
- user_id
- mission_id
- completed_at
- points_awarded
✨ UX Enhancements (Optional)
Include a confetti animation or “Well done!” popup after each mission

Add a completion badge or achievement once all onboarding missions are done

Allow HR admins to edit onboarding plans post-launch

Multi-language support for global companies

